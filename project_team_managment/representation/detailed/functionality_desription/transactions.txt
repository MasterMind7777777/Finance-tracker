transactions view
provide the following functionality:

add_transaction: This view handles the creation of a new transaction. It renders the transaction form (TransactionForm) and processes the form submission. If the form is valid, it creates a new transaction associated with the current user and redirects to the dashboard page.

delete_transaction: This view deletes a specific transaction based on its ID. It uses the get_object_or_404 function to retrieve the transaction object and deletes it. After deletion, it redirects to the dashboard or any other appropriate page.

categories_view: This view fetches all categories from the database and returns them as a JSON response. It converts the categories into a list of dictionaries and sends the response.

manage_categories: This view allows the user to manage categories. It fetches the categories associated with the current user and renders the category form (CategoryForm). It handles form submission, creates a new category associated with the user, and redirects to the same page.

delete_category: This view deletes a specific category associated with the current user. It retrieves the category object based on its ID and user, and deletes it. After deletion, it redirects to the category management page.

transaction_list: This view displays a list of transactions associated with the current user. It retrieves transactions based on the user and filters them based on provided parameters like sorting, filtering, and search. It also handles the submission of the main transaction form, creates a new transaction, and redirects to the same page.

transaction_detail: This view displays the details of a specific transaction. It retrieves the transaction object based on its ID. It also retrieves child transactions associated with the parent transaction. It handles the submission of the subtransaction form, creates a new subtransaction associated with the parent transaction, and returns the subtransaction details as a JSON response.
